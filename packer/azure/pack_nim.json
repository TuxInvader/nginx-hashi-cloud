{
  "description" : "Create an image for NGINX Instance Manager",

  "builders": [{
    "type": "azure-arm",
    "use_interactive_auth": true,
    "subscription_id": "{{ user `subscription` }}",
    "temp_compute_name": "{{user `nim_host`}}",
    "managed_image_resource_group_name": "{{ user `build_rg` }}",
    "managed_image_name": "{{ user `image_name` }}",
    "os_type": "Linux",
    "image_publisher": "Canonical",
    "image_offer": "0001-com-ubuntu-server-focal",
    "image_sku": "20_04-lts",
    "location": "{{ user `azure_region` }}",
    "vm_size": "{{ user `nim_vm_size` }}"
  }],
  
  "provisioners": [
  {
    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
    "inline": [ 
      "mkdir /etc/ssl/nginx", 
      "chown packer /etc/ssl/nginx" 
    ],
    "inline_shebang": "/bin/sh -x",
    "type": "shell"
  },
  {
    "type": "file",
    "source": "{{ user `nginx_ssl_key`}}",
    "destination": "/etc/ssl/nginx/nginx-repo.key"
  },
  {
    "type": "file",
    "source": "{{ user `nginx_ssl_crt`}}",
    "destination": "/etc/ssl/nginx/nginx-repo.crt"
  },
  {
    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
    "inline": [
      "export DEBIAN_FRONTEND=noninteractive",
      "chown -R root:root /etc/ssl/nginx",
      "apt-get update",
      "apt-get install -y apt-transport-https lsb-release ca-certificates openssl curl dirmngr",
      "curl https://cs.nginx.com/static/keys/nginx_signing.key | apt-key add",
      "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8919F6BD2B48D754",
      "curl https://cs.nginx.com/static/keys/app-protect-security-updates.key | apt-key add",
      "printf \"deb https://pkgs.nginx.com/plus/ubuntu `lsb_release -cs` nginx-plus\n\" > /etc/apt/sources.list.d/nginx-plus.list",
      "printf \"deb https://pkgs.nginx.com/nms/ubuntu `lsb_release -cs` nginx-plus\n\" > /etc/apt/sources.list.d/nms.list",
      "printf \"deb https://packages.clickhouse.com/deb lts main\n\" > /etc/apt/sources.list.d/clickhouse.list",
      "wget -q -O /etc/apt/apt.conf.d/90pkgs-nginx https://cs.nginx.com/static/files/90pkgs-nginx",
      "apt-get update",
      "apt-get dist-upgrade -y",
      "apt-get install -y gawk bash conntrack coreutils curl ebtables gettext ethtool libc-bin grep gzip iproute2 iptables jq less openssl sed socat tar util-linux apache2-utils",
      "apt-get install -y clickhouse-server={{ user `clickhouse_version` }} clickhouse-client={{ user `clickhouse_version` }} clickhouse-common-static={{ user `clickhouse_version` }}",
      "systemctl enable clickhouse-server.service",
      "systemctl start clickhouse-server.service",
      "apt-get install -y nginx-plus nginx-plus-module-njs nms-instance-manager {{ user `nim_extra_modules` }} {{ user `nim_nap_compiler` }}",
      "htpasswd -c -b /etc/nms/nginx/.htpasswd admin {{ user `admin_pass` }}",
      "htpasswd -b /etc/nms/nginx/.htpasswd deborah {{ user `user_pass` }}",
      "htpasswd -b /etc/nms/nginx/.htpasswd simon {{ user `user_pass` }}",
      "htpasswd -b /etc/nms/nginx/.htpasswd gitops {{ user `git_pass` }}",
      "htpasswd -b /etc/nms/nginx/.htpasswd gitdev {{ user `git_pass` }}",
      "systemctl enable nms.service --now",
      "systemctl enable nms-core.service --now",
      "systemctl enable nms-dpm.service --now",
      "systemctl enable nms-ingestion.service --now",
      "systemctl enable nms-integrations.service --now",
      "systemctl enable nginx.service --now",
      "printf \"{{ user `nim_extra_modules` }}\" | grep nms-api-connectivity-manager > /dev/null && systemctl enable nms-acm --now",
      "sleep 30",
      "systemctl stop nms.service",
      "systemctl stop clickhouse-server.service"
    ],
    "inline_shebang": "/bin/sh -x",
    "type": "shell"
  },
  {
    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
    "inline": [
      "/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0",
      "rm /var/lib/cloud/data/set-hostname || echo 'no set-hostname file'",
      "sync; sync; sync"
    ],
    "inline_shebang": "/bin/sh -x",
    "type": "shell"
  }
  ]
}
